generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


type PrepositionsUsages {
  description String
  examples    String[]
}

model Preposition {
  id          String               @id @default(auto()) @map("_id") @db.ObjectId
  expressions String[]
  title       String
    userId        String  @db.ObjectId
  author          User      @relation(fields: [userId], references: [id])
  usages      PrepositionsUsages[]
  serialNumber Int? @default(0)
  createdAt DateTime? @default(now())
  updatedAt     DateTime  @updatedAt @default(now())
   @@index([userId])
  @@map("prepositions")
}


type Examples {
  bangla  String
  english String
}


model Chapter {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  slug  String @unique
  category  String
  content   String
  image     String
  serialNumber Int? @default(0)
  title     String?
  statue String? @default("pending")
  createdAt DateTime? @default(now())
  updatedAt     DateTime  @updatedAt @default(now())
   userId        String  @db.ObjectId
  author          User      @relation(fields: [userId], references: [id])
   @@index([userId])
  @@map("chapters")
}

model Blog {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  bloggerEmail  String @default("hasib7143@gmail.com")
  bloggerImage  String? @default("https://i.ibb.co/Sw3NrxS/727399.png")
  bloggerName   String? @default("Md. Hasibul Hasan")
  category      String
  description   String
  examples      String[]
  favorites     String[]
  serialNumber Int? @default(0)
  status        String    @default("Pending") // Add default value "Pending"
  structure     String
  createdAt     DateTime?   @default(now())
  updatedAt     DateTime  @updatedAt @default(now())
  
  @@map("blogs")
}

model SpokenRule {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  category      String
  note   String
  serialNumber  Int?      @default(0)
  examples      Examples[]
  favorites     String[]
  status        String    @default("Pending")
  structure     String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt @default(now())
  userId        String  @db.ObjectId
  author          User      @relation(fields: [userId], references: [id])
  @@index([userId])
  @@map("spokenRules")
}

model User {
  id              String     @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  email           String     @unique
  password        String
  image           String? @default("https://i.ibb.co/Sw3NrxS/727399.png")
  role            Role       @default(USER)
  profile  Profile?
  emailVerified   DateTime?
  resetToken      String?    
  resetTokenExpiry DateTime?
  createdAt       DateTime?  @default(now())
  updatedAt       DateTime   @updatedAt @default(now())
  spokenRules     SpokenRule[]
  chapters     Chapter[]
  prepositions Preposition[]
  conjunction Conjunction[]
  @@map("users")
}

model Profile {
   id              String     @id @default(auto()) @map("_id") @db.ObjectId
  bio       String?
  userId        String  @db.ObjectId @unique
  user          User      @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
}
enum Role {
  ADMIN
  EDITOR
  USER
}

model Conjunction {
  id          String                 @id @default(auto()) @map("_id") @db.ObjectId
  conjunction String
  examples    Examples[]
  explanation String
  serialNumber Int? @default(0)
    userId        String  @db.ObjectId
  author          User      @relation(fields: [userId], references: [id])
  createdAt     DateTime?  @default(now())
  updatedAt     DateTime  @updatedAt @default(now())
   @@index([userId])
  @@map("Conjunctions")
}


